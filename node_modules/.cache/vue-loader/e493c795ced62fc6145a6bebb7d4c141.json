{"remainingRequest":"/home/runner/work/U1_Brigadas_de_Emergencia/U1_Brigadas_de_Emergencia/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/runner/work/U1_Brigadas_de_Emergencia/U1_Brigadas_de_Emergencia/node_modules/pug-plain-loader/index.js!/home/runner/work/U1_Brigadas_de_Emergencia/U1_Brigadas_de_Emergencia/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/runner/work/U1_Brigadas_de_Emergencia/U1_Brigadas_de_Emergencia/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/runner/work/U1_Brigadas_de_Emergencia/U1_Brigadas_de_Emergencia/src/views/curso/Tema4.vue?vue&type=template&id=5d821505&lang=pug&","dependencies":[{"path":"/home/runner/work/U1_Brigadas_de_Emergencia/U1_Brigadas_de_Emergencia/src/views/curso/Tema4.vue","mtime":1740290405842},{"path":"/home/runner/work/U1_Brigadas_de_Emergencia/U1_Brigadas_de_Emergencia/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U1_Brigadas_de_Emergencia/U1_Brigadas_de_Emergencia/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/runner/work/U1_Brigadas_de_Emergencia/U1_Brigadas_de_Emergencia/node_modules/pug-plain-loader/index.js","mtime":499162500000},{"path":"/home/runner/work/U1_Brigadas_de_Emergencia/U1_Brigadas_de_Emergencia/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U1_Brigadas_de_Emergencia/U1_Brigadas_de_Emergencia/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}